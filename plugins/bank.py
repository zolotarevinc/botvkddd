import json
import os
import time

users_dir = os.path.join(r"users/")

def loadjson(filepath):
    with open(filepath, 'r', encoding='utf-8') as jsonfile:
        return json.load(jsonfile, encoding='utf-8')

def dumpjson(data, filepath):
    with open(filepath, 'w', encoding='utf-8') as jsonfile:
        return json.dump(data, jsonfile, ensure_ascii=False)

def bankSys(sourceText, id):
    bankHelp = '\n\n‚ùì –ü–æ–º–æ—â—å:\n‚†Ä‚†Äüìà –ë–∞–Ω–∫ –∫—É—Ä—Å\n‚†Ä‚†Äüí± –ë–∞–Ω–∫ –æ–±–º–µ–Ω\n‚†Ä‚†Äüí∏ –ë–∞–Ω–∫ —Å–Ω—è—Ç—å [—Å—É–º–º–∞/–≤—Å–µ]\n‚†Ä‚†Äüí∂ –ë–∞–Ω–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞/–≤—Å–µ]'
    procHelp = '\n\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤–∫–ª–∞–¥ –ø–æ–¥ 1.2% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!'
    NoprocHelp = '\n\nüîî –ê–≤—Ç–æ-–≤–∫–ª–∞–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ –º–µ–Ω—å—à–µ 10.000.000‚Ç¨!'

    if sourceText != '':
        if '–±–∞–Ω–∫' == sourceText.split()[0].lower():
            get_data = loadjson(users_dir + str(id) + ".json")
            if int(get_data['own_smart']) >= 1:
                if len(sourceText.split()) > 1:
                    if sourceText.split()[1].lower() == '–æ–±–º–µ–Ω':
                        get_data = loadjson("curs.json")
                        price_coin = int(get_data['coin'])
                        get_data = loadjson(users_dir + str(id) + ".json")
                        bank_cr_balance = int(get_data['bank_cr_balance'])
                        if bank_cr_balance >= 1:
                            get_data = loadjson(users_dir + str(id) + ".json")
                            user_balance = int(get_data['balance'])

                            algo_obmen_euro = price_coin * bank_cr_balance
                            algo_update_balance = user_balance + algo_obmen_euro
                            algo_obmen_btc = bank_cr_balance - bank_cr_balance
                            get_data.update({"balance": '{}'.format(algo_update_balance)})
                            get_data.update({"bank_cr_balance": '{}'.format(algo_obmen_btc)})

                            dumpjson(get_data, users_dir + str(id) + ".json")
                            return ', –≤—ã –æ–±–º–µ–Ω—è–ª–∏: ' + str(bank_cr_balance) + '‡∏ø –Ω–∞ ' + str(algo_obmen_euro) + '‚Ç¨! ü§ë\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_update_balance) + '‚Ç¨'
                        else:
                            return ', –Ω–∞ —Å—á—ë—Ç–µ –≤ –±–∞–Ω–∫–µ - —É –≤–∞—Å –º–µ–Ω—å—à–µ 1 –±–∏—Ç–∫–æ–∏–Ω–∞! üôÅ'
                    elif sourceText.split()[1].lower() == '–ø–æ–ø–æ–ª–Ω–∏—Ç—å':
                        if len(sourceText.split()) > 2:
                            get_data = loadjson(users_dir + str(id) + ".json")
                            summa_up = sourceText.split()[2].lower()
                            user_balance = get_data['balance']
                            if summa_up.isdigit():
                                if int(summa_up) == 0: return ', —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0! üòï'
                                if int(user_balance) >= int(summa_up):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_popoln_bank_balance = int(bank_balance) + int(summa_up)
                                    algo_snyat_user_balance = int(user_balance) - int(summa_up)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–∞—Ä—Ç—É –Ω–∞: ' + str(summa_up) + '‚Ç¨ üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    balan—Åe_out = get_data['balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –∫–æ—à–µ–ª—å–∫–µ, –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã! üòî\nüí∞ –£ –≤–∞—Å –≤ –∫–æ—à–µ–ª—å–∫–µ: ' + str(balan—Åe_out) + '‚Ç¨'
                            elif sourceText.split()[2].lower() == '–≤—Å–µ':
                                if int(user_balance) >= int(1):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_popoln_bank_balance = int(bank_balance) + int(user_balance)
                                    algo_snyat_user_balance = int(user_balance) - int(user_balance)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–∞—Ä—Ç—É –Ω–∞: ' + str(user_balance) + '‚Ç¨ üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    balan—Åe_out = get_data['balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –∫–æ—à–µ–ª—å–∫–µ, –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã! üòî\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(balan—Åe_out) + '‚Ç¨'
                            elif sourceText.split()[2].lower() == '–≤—Å—ë':
                                if int(user_balance) >= int(1):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_popoln_bank_balance = int(bank_balance) + int(user_balance)
                                    algo_snyat_user_balance = int(user_balance) - int(user_balance)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–∞—Ä—Ç—É –Ω–∞: ' + str(user_balance) + '‚Ç¨ üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    balan—Åe_out = get_data['balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –∫–æ—à–µ–ª—å–∫–µ, –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã! üòî\nüí∞ –£ –≤–∞—Å –≤ –∫–æ—à–µ–ª—å–∫–µ: ' + str(balan—Åe_out) + '‚Ç¨'
                            else:
                                return ', –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —Å—É–º–º—ã - —Ü–∏—Ñ—Ä—ã! üòâ'
                        else:
                            return ', –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: üí∂ –ë–∞–Ω–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞/–≤—Å–µ]'
                    elif sourceText.split()[1].lower() == '–∫—É—Ä—Å':
                        get_data = loadjson("curs.json")
                        price_coin = int(get_data['coin'])
                        return ', –∫—É—Ä—Å –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã!\n\n‚†Äüìà –ü–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ë–∞–Ω–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è, —Ü–µ–Ω–∞ –∑–∞ –∫–∞–∂–¥—É—é –µ–¥–∏–Ω–∏—Ü—É –≤–∞–ª—é—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:\n\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω: ' + str(price_coin) + '‚Ç¨ –∑–∞ 1‡∏ø.'
                    elif sourceText.split()[1].lower() == '—Å–Ω—è—Ç—å':
                        if len(sourceText.split()) > 2:
                            get_data = loadjson(users_dir + str(id) + ".json")
                            summa_up = sourceText.split()[2].lower()
                            bank_balance = get_data['bank_balance']
                            if summa_up.isdigit():
                                if int(summa_up) == 0: return ', —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0! üòï'
                                if int(bank_balance) >= int(summa_up):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_popoln_bank_balance = int(bank_balance) - int(summa_up)
                                    algo_snyat_user_balance = int(user_balance) + int(summa_up)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã —Å–Ω—è–ª–∏: ' + str(summa_up) + '‚Ç¨ —Å –∫–∞—Ä—Ç—ã! üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    user_balance = get_data['balance']
                                    bank_balance = get_data['bank_balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö! üòî\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(user_balance) + '‚Ç¨'
                            elif sourceText.split()[2].lower() == '–≤—Å–µ':
                                if int(bank_balance) >= int(1):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_snyat_user_balance = int(user_balance) + int(bank_balance)
                                    algo_popoln_bank_balance = int(bank_balance) - int(bank_balance)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã —Å–Ω—è–ª–∏ ' + str(bank_balance) + '‚Ç¨ —Å –∫–∞—Ä—Ç—ã! üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    user_balance = get_data['balance']
                                    bank_balance = get_data['bank_balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö! üòî\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(user_balance) + '‚Ç¨'
                            elif sourceText.split()[2].lower() == '–≤—Å—ë':
                                if int(bank_balance) >= int(1):
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    bank_balance = int(get_data['bank_balance'])
                                    user_balance = int(get_data['balance'])
                                    algo_snyat_user_balance = int(user_balance) + int(bank_balance)
                                    algo_popoln_bank_balance = int(bank_balance) - int(bank_balance)
                                    get_data.update({"bank_balance": '{}'.format(int(algo_popoln_bank_balance))})
                                    get_data.update({"balance": '{}'.format(int(algo_snyat_user_balance))})
                                    dumpjson(get_data, users_dir + str(id) + ".json")
                                    return ', –≤—ã —Å–Ω—è–ª–∏ ' + str(bank_balance) + '‚Ç¨ —Å –∫–∞—Ä—Ç—ã! üòÄ\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(algo_popoln_bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(algo_snyat_user_balance) + '‚Ç¨'
                                else:
                                    get_data = loadjson(users_dir + str(id) + ".json")
                                    user_balance = get_data['balance']
                                    bank_balance = get_data['bank_balance']
                                    return ', —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö! üòî\nüí≥ –í –±–∞–Ω–∫–µ: ' + str(bank_balance) + '‚Ç¨\nüí∞ –í –∫–æ—à–µ–ª—å–∫–µ: ' + str(user_balance) + '‚Ç¨'
                            else:
                                return ', –¥–ª—è —Å–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è —Å—É–º–º—ã - —Ü–∏—Ñ—Ä—ã! üòâ'
                        else:
                            return ', –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: üí∏ –ë–∞–Ω–∫ —Å–Ω—è—Ç—å [—Å—É–º–º–∞/–≤—Å–µ]'
                    else:
                        get_data = loadjson(users_dir + str(id) + ".json")
                        if int(get_data['bank_balance']) <= 20000000:
                            bank_proc_raznica_time = float(time.time()) - float(get_data['bank_vd_time'])
                            bank_hours = int(bank_proc_raznica_time) / 3600
                            bank_balance = int(get_data['bank_balance'])
                            if bank_hours >= 24:
                                bank_proc_profit = int(1.2 * bank_balance)
                                get_data = loadjson(users_dir + str(id) + ".json")
                                get_data.update({"bank_balance": '{}'.format(int(bank_proc_profit))})
                                get_data.update({"bank_vd_time": '{}'.format(time.time())})
                                dumpjson(get_data, users_dir + str(id) + ".json")
                                return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(bank_proc_profit) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + procHelp
                            else:
                                get_data = loadjson(users_dir + str(id) + ".json")
                                return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(get_data['bank_balance']) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + procHelp
                        else:
                            get_data = loadjson(users_dir + str(id) + ".json")
                            return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(get_data['bank_balance']) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + NoprocHelp
                else:
                    get_data = loadjson(users_dir + str(id) + ".json")
                    if int(get_data['bank_balance']) <= 20000000:
                        bank_proc_raznica_time = float(time.time()) - float(get_data['bank_vd_time'])
                        bank_hours = int(bank_proc_raznica_time) / 3600
                        bank_balance = int(get_data['bank_balance'])
                        if bank_hours >= 24:
                            bank_proc_profit = int(1.2 * bank_balance)
                            get_data = loadjson(users_dir + str(id) + ".json")
                            get_data.update({"bank_balance": '{}'.format(int(bank_proc_profit))})
                            get_data.update({"bank_vd_time": '{}'.format(time.time())})
                            dumpjson(get_data, users_dir + str(id) + ".json")
                            return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(bank_proc_profit) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + procHelp
                        else:
                            get_data = loadjson(users_dir + str(id) + ".json")
                            return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(
                                get_data['bank_balance']) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + procHelp
                    else:
                        get_data = loadjson(users_dir + str(id) + ".json")
                        return ', –ø–æ–º–æ—â—å –ø–æ –±–∞–Ω–∫—É:\n\nüìã –°—á—ë—Ç –≤ –±–∞–Ω–∫–µ:\n‚†Ä‚†Äüí≥ –ù–∞ –∫–∞—Ä—Ç–µ: ' + str(get_data['bank_balance']) + '‚Ç¨\n‚†Ä‚†ÄüèÆ –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ' + str(get_data['bank_cr_balance']) + '‡∏ø' + bankHelp + NoprocHelp
            else:
                return ', –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∞–Ω–∫–∞, –ø—Ä–µ–æ–±—Ä–µ—Ç–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω! üòê\nüì± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω—ã: –ú–∞–≥–∞–∑–∏–Ω —Ç–µ–ª–µ—Ñ–æ–Ω'
        else:
            return None
    pass